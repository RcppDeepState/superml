// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// superSplit
CharacterVector superSplit(const std::string& str, char sep);
RcppExport SEXP _superml_superSplit(SEXP strSEXP, SEXP sepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type str(strSEXP);
    Rcpp::traits::input_parameter< char >::type sep(sepSEXP);
    rcpp_result_gen = Rcpp::wrap(superSplit(str, sep));
    return rcpp_result_gen;
END_RCPP
}
// superNgrams
std::vector<std::string> superNgrams(std::string str, NumericVector ngram_range, char sep);
RcppExport SEXP _superml_superNgrams(SEXP strSEXP, SEXP ngram_rangeSEXP, SEXP sepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type str(strSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngram_range(ngram_rangeSEXP);
    Rcpp::traits::input_parameter< char >::type sep(sepSEXP);
    rcpp_result_gen = Rcpp::wrap(superNgrams(str, ngram_range, sep));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_superml_superSplit", (DL_FUNC) &_superml_superSplit, 2},
    {"_superml_superNgrams", (DL_FUNC) &_superml_superNgrams, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_superml(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
